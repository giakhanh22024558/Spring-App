name: CI/CD Pipeline

on:
  push:
    branches:
      - dev

env:
  REGISTRY: docker.io
  IMAGE_BACKEND: docker.io/khanhdev13/spring-boot-app
  IMAGE_FRONTEND: docker.io/khanhdev13/vue-app
  MYSQL_ROOT_PASSWORD: root
  MYSQL_DATABASE: springdb
  MYSQL_USER: user
  MYSQL_PASSWORD: password

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
          MYSQL_USER: ${{ env.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Wait for MySQL to be ready
        run: sleep 30

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build Backend (Skip Tests)
        working-directory: backend/demo
        run: mvn clean install -DskipTests

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Build Frontend
        working-directory: frontend
        run: |
          npm install
          npm run build

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_SIGN_IN }}" | docker login -u "khanhdev13" --password-stdin

      - name: Build and Push Backend Docker Image
        run: |
          docker build -t $IMAGE_BACKEND:${{ github.sha }} -f backend/demo/Dockerfile backend/
          docker push $IMAGE_BACKEND:${{ github.sha }}

      - name: Build and Push Frontend Docker Image
        run: |
          docker build -t $IMAGE_FRONTEND:${{ github.sha }} -f frontend/Dockerfile frontend/
          docker push $IMAGE_FRONTEND:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout k8s-config Repository
        uses: actions/checkout@v3
        with:
          repository: giakhanh22024558/Spring-App
          ref: dev
          token: ${{ secrets.GIT_SIGN_IN }} # Create a classic PAT or use a fine-grained token
          path: k8s

      - name: Update Kubernetes Manifests
        run: |
          sed -i "s|image: docker.io/khanhdev13/spring-boot-app:.*|image: docker.io/khanhdev13/spring-boot-app:${{ github.sha }}|g" k8s/backend-deployment.yaml
          sed -i "s|image: docker.io/khanhdev13/vue-app:.*|image: docker.io/khanhdev13/vue-app:${{ github.sha }}|g" k8s/frontend-deployment.yaml

      - name: Commit and Push Changes to k8s manifests
        run: |
          cd k8s
          git config user.email "hotmashmallow@gmail.com"
          git config user.name "giakhanh22024558"
          git add .
          git commit -m "Update image tags to ${{ github.sha }}"
          git push origin dev # or whatever branch you're using

      - name: Trigger ArgoCD Sync
        run: |
          curl -k POST "https://$ARGOCD_EXTERNAL_IP/api/v1/applications/my-app/sync" \
          -H "Authorization: Bearer $ARGOCD_AUTH_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{}'
        env:
          ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
          ARGOCD_EXTERNAL_IP: ${{ secrets.ARGOCD_EXTERNAL_IP }}
